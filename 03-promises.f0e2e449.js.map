{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAkB/B,SAASI,EAAcC,EAAUC,GACb,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUP,MAAAQ,IAEpBG,EAAO,CAAEK,SAAAT,EAAUP,MAAAQ,G,GAEpBA,E,IAGGS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACxBH,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAE5DsB,OAAM,SAAAJ,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAClBH,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAhClED,EAAKM,KAAKmB,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBAMN,IAJA,IAAMC,EAAYC,SAAS7B,EAAKC,MAAM6B,MAAO,IACvC1B,EAAOyB,SAAS7B,EAAKI,KAAK0B,MAAO,IACjCzB,EAASwB,SAAS7B,EAAKK,OAAOyB,MAAO,IACvC7B,EAAQ2B,EACHG,EAAI,EAAGA,GAAK1B,EAAQ0B,GAAK,EAChCxB,EAAcwB,EAAG9B,GACjBA,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const initDelay = parseInt(refs.delay.value, 10);\n  const step = parseInt(refs.step.value, 10);\n  const amount = parseInt(refs.amount.value, 10);\n  let delay = initDelay;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  };\n}\n)\n      \n  \nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  \n    promise.then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","initDelay","parseInt","value","i"],"version":3,"file":"03-promises.f0e2e449.js.map"}